package com.wangert.vhw.config;

import com.wangert.vhw.interceptor.LoginHandlerInterceptor;
import org.springframework.boot.web.servlet.MultipartConfigFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.util.unit.DataSize;
import org.springframework.web.servlet.config.annotation.*;

import javax.servlet.MultipartConfigElement;
import java.io.File;

/**
 * web配置
 * @Author：Wangert
 *
 */

@EnableWebMvc
@Configuration
public class MySpringMvcConfigurer implements WebMvcConfigurer {

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/**").addResourceLocations("classpath:/static/");
    }

    @Override
    public void addViewControllers(ViewControllerRegistry registry) {
        registry.addViewController("/").setViewName("login");
        registry.addViewController("/index.html").setViewName("login");
        registry.addViewController("/homePage").setViewName("main");
        registry.addViewController("/registerSuccess").setViewName("registerSuccess");
        registry.addViewController("/registWait2").setViewName("registWait2");
        //registry.addViewController("/personalCenter").setViewName("personalCenter");
        //registry.addViewController("/register").setViewName("register");
    }

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        //拦截指定路径
        registry.addInterceptor(new LoginHandlerInterceptor()).
                addPathPatterns("/**").
                excludePathPatterns("/", "/index.html", "/login", "/register", "/registerSuccess/**", "/registWait2/**", "/registerSuccessTest").
                //排除静态资源
                excludePathPatterns("/css/*", "/img/*", "/js/*", "/fonts/*");
    }

    @Bean
    public MultipartConfigElement multipartConfigElement() {
        MultipartConfigFactory factory = new MultipartConfigFactory();
        String location = System.getProperty("user.dir") + "/data/tmp";
        File tmpFile = new File(location);
        if (!tmpFile.exists()) {
            tmpFile.mkdirs();
        }
        factory.setLocation(location);

        return factory.createMultipartConfig();
    }

}
