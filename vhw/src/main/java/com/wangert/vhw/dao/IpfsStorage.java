package com.wangert.vhw.dao;

import io.ipfs.api.IPFS;
import io.ipfs.api.MerkleNode;
import io.ipfs.api.NamedStreamable;
import io.ipfs.multihash.Multihash;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

/**
 *
 * 通过ipfs进行文件存储与下载
 * @Author: Wangert
 *
 */

public class IpfsStorage {

    public static IPFS ipfs = new IPFS("/ip4/127.0.0.1/tcp/5001");

    public static String ipfsUpload(String filePath) throws IOException {


        NamedStreamable.FileWrapper file = new NamedStreamable.FileWrapper(new File(filePath));
        MerkleNode result = ipfs.add(file).get(0);

        return result.hash.toString();

    }


    public static void ipfsDownloadByHash(String path, String ipfsHash) throws IOException {

        Multihash multihash = Multihash.fromBase58(ipfsHash);

        byte[] data = ipfs.cat(multihash);

        if (data != null) {
            File file = new File(path);

            if (file.exists()) {
                file.delete();
            }

            FileOutputStream fos = new FileOutputStream(file);
            fos.write(data, 0, data.length);
            fos.flush();
            fos.close();
        }

    }
/*

    public static void main(String[] args) throws Exception {

        IpfsStorage ipfsStorage = new IpfsStorage();

        String hash = ipfsStorage.ipfsUpload("/Users/joten/项目/“链未来”区块链应用大赛/0xfe0fed8e593143f5afb0d753bdbd1c9051db6549.json");

        System.out.println("ipfsHash：" + hash);

        //System.out.println("================下载文件===============");

        //ipfsStorage.ipfsDownloadByHash("/Users/joten/项目/ipfsDownload/wangjitao.zip", "QmY4QYLFo1ZkobL63d5aYb7dLURjmpjcBwAL9raxkqYYE8");

        //System.out.println("================下载成功===============");

    }
*/
}
