package com.wangert.vhw.contracts;

import cn.hyperchain.sdk.common.utils.FuncParams;
import org.javatuples.Septet;

import java.io.IOException;
import java.math.BigInteger;
import java.util.List;

/**
 *
 * 补丁数据存储合约
 * 基于飞洛区块链的合约方法封装
 * @Author：Wangert
 *
 */

public class PatchStorageContract {

    //合约数据
    FiloeanContract filoeanContract;
    //合约abi路径
    String abiPath;
    //合约bin路径
    String binPath;

    //构造函数，初始化
    public PatchStorageContract() {

        this.filoeanContract = new FiloeanContract("0x8677e2ae09992ad20236d788d871c738eac5f894", "patch");
        this.abiPath = "solidity/PatchStorage.abi";
        this.binPath = "solidity/PatchStorage.bin";

        try {
            //加载合约
            this.filoeanContract.filoean.loadBinAndAbi(this.binPath, this.abiPath);

        }catch (IOException e) {

            e.printStackTrace();

        }

    }

    //判断补丁是否存在
    public boolean patchExisted(String ipfsHash) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "patchExisted(string)", funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //判断补丁是否审核通过
    public boolean patchPassed(String ipfsHash) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "patchPassed(string)", funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //添加补丁发布时间，设置审核通过标志
    public boolean addReleaseTime(String ipfsHash, String releaseTime) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);
        funcParams.addParams(releaseTime);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "addReleaseTime(string,string)", funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //star加一
    public boolean incStar(String ipfsHash) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        String functionName = "incStar(string)";

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, functionName, funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //增加补丁总评分
    public boolean addPatchTotalScore(String ipfsHash, int addScore) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);
        //将int转换为bigInteger
        BigInteger b = BigInteger.valueOf(addScore);
        funcParams.addParams(b);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "addPatchTotalScore(string,uint64)", funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //增加补丁
    public boolean addPatch(String ipfsHash, String name, String username, String submitTime, String vulnerabilityIpfsHash) {

        boolean result;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);
        funcParams.addParams(name);
        funcParams.addParams(username);
        funcParams.addParams(submitTime);
        funcParams.addParams(vulnerabilityIpfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "addPatch(string,string,string,string,string)", funcParams);

        result = Boolean.valueOf(objects.get(0).toString());

        return result;

    }

    //获取补丁基本信息
    public Septet<String, String, String, String, String, Integer, Integer> getBasicInformation(String ipfsHash) {

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getBasicInformation(string)", funcParams);

        //获取补丁名称、补丁发布者、补丁提交时间、补丁发布时间、对应的漏洞ipfs哈希、star数量、总评分
        Septet<String, String, String, String, String, Integer, Integer> septet = new Septet<>(
                //补丁名称
                objects.get(0).toString(),
                //补丁发布者
                objects.get(1).toString(),
                //补丁提交时间
                objects.get(2).toString(),
                //补丁发布时间
                objects.get(3).toString(),
                //对应的漏洞ipfs哈希
                objects.get(4).toString(),
                //star数量
                Integer.valueOf(objects.get(5).toString()),
                //补丁总评分
                Integer.valueOf(objects.get(6).toString()));

        return septet;

    }

    //获取补丁名称
    public String getPatchName(String ipfsHash) {

        String name;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchName(string)", funcParams);

        name = objects.get(0).toString();

        return name;

    }

    //获取补丁发布者
    public String getPatchUsername(String ipfsHash) {

        String name;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchUsername(string)", funcParams);

        name = objects.get(0).toString();

        return name;

    }

    //获取补丁提交时间
    public String getPatchSubmitTime(String ipfsHash) {

        String name;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchSubmitTime(string)", funcParams);

        name = objects.get(0).toString();

        return name;

    }

    //获取补丁发布时间
    public String getPatchReleaseTime(String ipfsHash) {

        String name;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchReleaseTime(string)", funcParams);

        name = objects.get(0).toString();

        return name;

    }

    //获取补丁对应的漏洞ipfs哈希
    public String getVulnerabilityIpfsHash(String ipfsHash) {

        String name;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getVulnerabilityIpfsHash(string)", funcParams);

        name = objects.get(0).toString();

        return name;

    }

    //获取补丁star数
    public int getPatchStar(String ipfsHash) {

        int starCount;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchStar(string)", funcParams);

        starCount = Integer.parseInt(objects.get(0).toString());

        return starCount;

    }

    //获取补丁总评分
    public int getPatchTotalScore(String ipfsHash) {

        int starCount;

        //设置合约方法参数
        FuncParams funcParams = new FuncParams();
        funcParams.addParams(ipfsHash);

        List<?> objects = filoeanContract.filoean.invokeContract(filoeanContract.accountPrivateJson, "getPatchTotalScore(string)", funcParams);

        starCount = Integer.parseInt(objects.get(0).toString());

        return starCount;

    }

/*
    public static void main(String[] args) {

        PatchStorageContract patchStorageContract = new PatchStorageContract();

        //boolean b = patchStorageContract.addPatch("test", "test", "wangjitao", "2019Test", "test");

        Septet<String, String, String, String, String, Integer, Integer> septet;

        septet = patchStorageContract.getBasicInformation("test");

        System.out.println("name:" + septet.getValue0());
        System.out.println("username:" + septet.getValue1());
        System.out.println("submitTime:" + septet.getValue2());
        System.out.println("releaseTime:" + septet.getValue3());
        System.out.println("vulnerabilityIpfsHash:" + septet.getValue4());
        System.out.println("starCount:" + septet.getValue5());
        System.out.println("totalScore:" + septet.getValue6());

        //System.out.println("result:" + b);

    }
*/
}
