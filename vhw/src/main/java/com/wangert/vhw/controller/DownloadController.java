package com.wangert.vhw.controller;

import com.wangert.vhw.service.VulnerabilityService;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * 文件下载控制层
 * @Author：Wangert
 *
 */

@Controller
public class DownloadController {

    @ResponseBody
    @RequestMapping(value = {"/downloadVulnerability", "/downloadPatch"})
    public String downloadVulnerability(String fileName, HttpServletResponse response) {

        VulnerabilityService vulnerabilityService = new VulnerabilityService();
        vulnerabilityService.downloadVulnerabilityByIpfsHash(fileName);

        String path = "src/main/resources/files/ipfsDownload/"+ fileName + ".zip";

        System.out.println(path);

        File file = new File(path);
        if (!file.exists()) {
            System.out.println("文件不存在");
            return "error";
        }

        FileInputStream fis = null;
        BufferedInputStream bis = null;
        try {
            response.setContentType("application/force-download");// 设置强制下载不打开
            Date currentTime = new Date();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
            String dataTime = dateFormat.format(currentTime);

            //文件重命名
            String newFileName = dataTime + fileName + ".zip";
            response.addHeader("Content-Disposition", "attachment;fileName=" + newFileName);

            byte[] buffer = new byte[1024];
            fis = new FileInputStream(file);
            bis = new BufferedInputStream(fis);
            OutputStream outputStream = response.getOutputStream();
            int i = bis.read(buffer);
            while (i != -1) {
                outputStream.write(buffer, 0, i);
                i = bis.read(buffer);
            }
            System.out.println("下载成功！");

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (bis != null) {
                try {
                    bis.close();
                }catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (fis != null) {
                try {
                    fis.close();
                }catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }

        return "success";

    }




}
