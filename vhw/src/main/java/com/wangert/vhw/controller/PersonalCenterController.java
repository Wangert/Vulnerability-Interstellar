package com.wangert.vhw.controller;

import com.wangert.vhw.service.PersonalCenterDataAcquireService;
import org.bouncycastle.math.raw.Mod;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * 个人中心控制类
 * @Author：Wangert
 *
 */

@Controller
public class PersonalCenterController {

    @RequestMapping("/personalCenterVulnerability")
    public String personalCenterVulnerability(HttpSession session, Model model) {

        //获取当前用户名
        String username = session.getAttribute("loginUsername").toString();

        PersonalCenterDataAcquireService personalCenterDataAcquireService = new PersonalCenterDataAcquireService();

        List<Map<String, Object>> userVulnerabilities = personalCenterDataAcquireService.acquireAllVulnerabilitiesByUsername(username);


        for (Map<String, Object> map : userVulnerabilities) {

            int numberOfPatch = personalCenterDataAcquireService.getNumberOfPatchWithVulnerability(map.get("ipfsHash").toString());

            map.put("numberOfPatch", numberOfPatch);

        }


        model.addAttribute("userVulnerabilities", userVulnerabilities);

        return "personalCenterVulnerability";

    }

    @RequestMapping("/patchesOfVulnerability")
    public  String patchesOfVulnerability(String vulnerabilityHash, Model model) {

        List<Map<String, Object>> patchList = new ArrayList<>();

        PersonalCenterDataAcquireService personalCenterDataAcquireService = new PersonalCenterDataAcquireService();

        patchList = personalCenterDataAcquireService.acquireAllPatchesByVulnerability(vulnerabilityHash);

        /*
        if ("QmTuSjAM7wdpAmWDrTABWgguwUfCXPfmYnRLvDiTCBj5w9".equals(vulnerabilityHash)) {
            Map<String, Object> map1 = new HashMap<>();
            map1.put("ipfsHash", "QmY4QYLFo1ZkobL63d5aYb7dLURjmpjcBwAL9raxkqYYE8");
            map1.put("vulnerabilityHash", "QmTuSjAM7wdpAmWDrTABWgguwUfCXPfmYnRLvDiTCBj5w9");
            map1.put("patchName", "patchOfVulnerabilityGGG");
            map1.put("username", "wangjitao");
            map1.put("releaseDate", "2019/09/29 13:23:11");
            map1.put("description", "1.test/n2.testtest");
            map1.put("star", 23);
            map1.put("score", 0);

            patchList.add(map1);

        }
        */

        model.addAttribute("patchList", patchList);
        model.addAttribute("vulnerabilityHash", vulnerabilityHash);

        return "patchesOfVulnerability";
    }

    @RequestMapping("/personalCenterPatch")
    public String personalCenterPatch(HttpSession session, Model model) {

        //获取当前用户名
        String username = session.getAttribute("loginUsername").toString();

        PersonalCenterDataAcquireService personalCenterDataAcquireService = new PersonalCenterDataAcquireService();

        List<Map<String, Object>> userPatches = personalCenterDataAcquireService.acquireAllPatchesByUsername(username);

        model.addAttribute("userPatches", userPatches);

        return "personalCenterPatch";

    }

    @RequestMapping("/publishVulnerability")
    public String publishVulnerability() {

        return "publishVulnerability";

    }

    @RequestMapping("/publishPatch")
    public String publishPatch() {

        return "publishPatch";

    }

    @RequestMapping("/assessVulnerability")
    public String assessVulnerability() {

        return "assessVulnerability";

    }

    @RequestMapping("/assessPatch")
    public String assessPatch() {

        return "assessPatch";

    }

}
